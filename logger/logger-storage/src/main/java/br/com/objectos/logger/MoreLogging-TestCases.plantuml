'
' Copyright (C) 2021-2023 Objectos Software LTDA.
'
' Licensed under the Apache License, Version 2.0 (the "License");
' you may not use this file except in compliance with the License.
' You may obtain a copy of the License at
'
' http://www.apache.org/licenses/LICENSE-2.0
'
' Unless required by applicable law or agreed to in writing, software
' distributed under the License is distributed on an "AS IS" BASIS,
' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
' See the License for the specific language governing permissions and
' limitations under the License.
'

@startmindmap

*_ Test cases

**:**Test case 01**
----
Verify simple logging use case when Storage does not yet exist.
This should simulate server startup for the first time.
More specifically, verify:
* BootstrapLogger copies in-memory logs to Logger
* Storage is created
* Logger delegates to LogWriter 
* LogWriter correctly writes
* LogReader correctly reads
----
# create BootstrapLogger
# log INFO0
# log INFO1
# create Storage
# bootstrap Logger
# log INFO2
# log INFOL
# log INFO.ST
# close Logger
# open LogReader
# invoke LogReader.read
# verify all 5 log instances were read;
*** BootstrapLogger
*** Logger
*** LogReader
*** LogWriter
*** Storage
*** StorageFormatV1

**:**Test case 02**
----
Verify simple logging use case when Storage already exists.
This should simulate subsequent server startups.
This must verify that LogWriter/Storage appends to
log file (ie, does not overwrite it). 
----
# execute **Test case 01**
# open Storage
# create Logger
# log TRACE0
# log DEBUG0
# log WARN0
# log ERROR0
# close Logger
# open LogReader
# invoke LogReader.read
# verify all 9 log instances were read;
*** BootstrapLogger
*** Logger
*** LogReader
*** LogWriter
*** Storage
*** StorageFormatV1

**:**Test case 03**
----
Verify the ProcessingService with a single processor.
The processor should be the one that prints logs to an Appendable.
In production it will be System.out. In this test case it can
be a StringBuilder.
----
# create Storage
# create Logger
# create ProcessingService
# create StringBuilder
# create AppendablePrinter w/ StringBuilder
# add printer to ProcessingService
# start ProcessingService
# Testing.sleep?
# log ERROR0
# log ERROR1
# log ERROR2
# log ERRORL
# log ERROR.ST
# close Logger
# Testing.sleep?
# verify all 5 logs are in the StringBuilder;
*** AppendablePrinter
*** ProcessingJob
*** ProcessingService
*** Processor
@endmindmap
